// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: vote.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StudentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *StudentId) Reset() {
	*x = StudentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentId) ProtoMessage() {}

func (x *StudentId) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentId.ProtoReflect.Descriptor instead.
func (*StudentId) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{0}
}

func (x *StudentId) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type Voter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Firstname string     `protobuf:"bytes,1,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname  string     `protobuf:"bytes,2,opt,name=lastname,proto3" json:"lastname,omitempty"`
	StudentId *StudentId `protobuf:"bytes,3,opt,name=studentId,proto3" json:"studentId,omitempty"`
	BallotBox string     `protobuf:"bytes,4,opt,name=ballotBox,proto3" json:"ballotBox,omitempty"`
	Faculity  string     `protobuf:"bytes,5,opt,name=faculity,proto3" json:"faculity,omitempty"`
}

func (x *Voter) Reset() {
	*x = Voter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voter) ProtoMessage() {}

func (x *Voter) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voter.ProtoReflect.Descriptor instead.
func (*Voter) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{1}
}

func (x *Voter) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *Voter) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *Voter) GetStudentId() *StudentId {
	if x != nil {
		return x.StudentId
	}
	return nil
}

func (x *Voter) GetBallotBox() string {
	if x != nil {
		return x.BallotBox
	}
	return ""
}

func (x *Voter) GetFaculity() string {
	if x != nil {
		return x.Faculity
	}
	return ""
}

type VotingDayStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalVotes     int64 `protobuf:"varint,1,opt,name=totalVotes,proto3" json:"totalVotes,omitempty"`
	MorningVotes   int64 `protobuf:"varint,2,opt,name=morningVotes,proto3" json:"morningVotes,omitempty"`
	AfternoonVotes int64 `protobuf:"varint,3,opt,name=afternoonVotes,proto3" json:"afternoonVotes,omitempty"`
}

func (x *VotingDayStats) Reset() {
	*x = VotingDayStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotingDayStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotingDayStats) ProtoMessage() {}

func (x *VotingDayStats) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotingDayStats.ProtoReflect.Descriptor instead.
func (*VotingDayStats) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{2}
}

func (x *VotingDayStats) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *VotingDayStats) GetMorningVotes() int64 {
	if x != nil {
		return x.MorningVotes
	}
	return 0
}

func (x *VotingDayStats) GetAfternoonVotes() int64 {
	if x != nil {
		return x.AfternoonVotes
	}
	return 0
}

type BallotBoxStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TotalVotes  int64             `protobuf:"varint,2,opt,name=totalVotes,proto3" json:"totalVotes,omitempty"`
	VotesPerDay []*VotingDayStats `protobuf:"bytes,3,rep,name=votesPerDay,proto3" json:"votesPerDay,omitempty"`
}

func (x *BallotBoxStats) Reset() {
	*x = BallotBoxStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallotBoxStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallotBoxStats) ProtoMessage() {}

func (x *BallotBoxStats) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallotBoxStats.ProtoReflect.Descriptor instead.
func (*BallotBoxStats) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{3}
}

func (x *BallotBoxStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BallotBoxStats) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *BallotBoxStats) GetVotesPerDay() []*VotingDayStats {
	if x != nil {
		return x.VotesPerDay
	}
	return nil
}

type ElectionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElectionYear int32             `protobuf:"varint,1,opt,name=electionYear,proto3" json:"electionYear,omitempty"`
	TotalVotes   int64             `protobuf:"varint,2,opt,name=totalVotes,proto3" json:"totalVotes,omitempty"`
	BallotBoxes  []*BallotBoxStats `protobuf:"bytes,3,rep,name=ballotBoxes,proto3" json:"ballotBoxes,omitempty"`
}

func (x *ElectionStats) Reset() {
	*x = ElectionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElectionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectionStats) ProtoMessage() {}

func (x *ElectionStats) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectionStats.ProtoReflect.Descriptor instead.
func (*ElectionStats) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{4}
}

func (x *ElectionStats) GetElectionYear() int32 {
	if x != nil {
		return x.ElectionYear
	}
	return 0
}

func (x *ElectionStats) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *ElectionStats) GetBallotBoxes() []*BallotBoxStats {
	if x != nil {
		return x.BallotBoxes
	}
	return nil
}

type VoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId   *StudentId `protobuf:"bytes,1,opt,name=studentId,proto3" json:"studentId,omitempty"`
	IsAfternoon bool       `protobuf:"varint,2,opt,name=isAfternoon,proto3" json:"isAfternoon,omitempty"`
}

func (x *VoteReq) Reset() {
	*x = VoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteReq) ProtoMessage() {}

func (x *VoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_vote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteReq.ProtoReflect.Descriptor instead.
func (*VoteReq) Descriptor() ([]byte, []int) {
	return file_vote_proto_rawDescGZIP(), []int{5}
}

func (x *VoteReq) GetStudentId() *StudentId {
	if x != nil {
		return x.StudentId
	}
	return nil
}

func (x *VoteReq) GetIsAfternoon() bool {
	if x != nil {
		return x.IsAfternoon
	}
	return false
}

var File_vote_proto protoreflect.FileDescriptor

var file_vote_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xb0, 0x01, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x63, 0x75, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x61, 0x63, 0x75, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x7c, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x6f,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a,
	0x0b, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e,
	0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0b,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x0d,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56,
	0x6f, 0x74, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x22,
	0x60, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x6e, 0x6f, 0x6f,
	0x6e, 0x32, 0xc2, 0x02, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x42, 0x79, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x1a, 0x11, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f,
	0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56,
	0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x16, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x19, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vote_proto_rawDescOnce sync.Once
	file_vote_proto_rawDescData = file_vote_proto_rawDesc
)

func file_vote_proto_rawDescGZIP() []byte {
	file_vote_proto_rawDescOnce.Do(func() {
		file_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_vote_proto_rawDescData)
	})
	return file_vote_proto_rawDescData
}

var file_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vote_proto_goTypes = []any{
	(*StudentId)(nil),      // 0: CampusVote.StudentId
	(*Voter)(nil),          // 1: CampusVote.Voter
	(*VotingDayStats)(nil), // 2: CampusVote.VotingDayStats
	(*BallotBoxStats)(nil), // 3: CampusVote.BallotBoxStats
	(*ElectionStats)(nil),  // 4: CampusVote.ElectionStats
	(*VoteReq)(nil),        // 5: CampusVote.VoteReq
	(*Void)(nil),           // 6: CampusVote.Void
	(*StatusCode)(nil),     // 7: CampusVote.StatusCode
}
var file_vote_proto_depIdxs = []int32{
	0, // 0: CampusVote.Voter.studentId:type_name -> CampusVote.StudentId
	2, // 1: CampusVote.BallotBoxStats.votesPerDay:type_name -> CampusVote.VotingDayStats
	3, // 2: CampusVote.ElectionStats.ballotBoxes:type_name -> CampusVote.BallotBoxStats
	0, // 3: CampusVote.VoteReq.studentId:type_name -> CampusVote.StudentId
	1, // 4: CampusVote.Vote.CreateVoter:input_type -> CampusVote.Voter
	0, // 5: CampusVote.Vote.GetVoterByStudentId:input_type -> CampusVote.StudentId
	5, // 6: CampusVote.Vote.RegisterVote:input_type -> CampusVote.VoteReq
	0, // 7: CampusVote.Vote.CheckVoterStatus:input_type -> CampusVote.StudentId
	6, // 8: CampusVote.Vote.GetElectionStats:input_type -> CampusVote.Void
	7, // 9: CampusVote.Vote.CreateVoter:output_type -> CampusVote.StatusCode
	1, // 10: CampusVote.Vote.GetVoterByStudentId:output_type -> CampusVote.Voter
	7, // 11: CampusVote.Vote.RegisterVote:output_type -> CampusVote.StatusCode
	7, // 12: CampusVote.Vote.CheckVoterStatus:output_type -> CampusVote.StatusCode
	4, // 13: CampusVote.Vote.GetElectionStats:output_type -> CampusVote.ElectionStats
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_vote_proto_init() }
func file_vote_proto_init() {
	if File_vote_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vote_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StudentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Voter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*VotingDayStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BallotBoxStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ElectionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vote_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*VoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vote_proto_goTypes,
		DependencyIndexes: file_vote_proto_depIdxs,
		MessageInfos:      file_vote_proto_msgTypes,
	}.Build()
	File_vote_proto = out.File
	file_vote_proto_rawDesc = nil
	file_vote_proto_goTypes = nil
	file_vote_proto_depIdxs = nil
}
